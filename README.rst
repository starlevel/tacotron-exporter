Tacotron Exporter
-----------------

This is a script that automatically exports data for Tacotron training, as specified by `this
tutorial`_.

Tacotron training is a lot harder than using something like xVASynth, since it requires lots of
preprocessing of the data files in order to get any sort of output.

However, since xVASynth is ***incredibly*** hostile when it comes to user freedom, I believe it
is a better choice to bite the bullet and spend some effort to write a script to automatically
reprocess the Skyrim data files for usage with Tacotron training.

This doesn't handle the actual training side - you'll still have to use the Google Colab output for
that.

Licencing
---------

This program is Free (as in freedom) Software, under the GNU General Public Licence. This means you
can:

- Redistribute without my permission
- Modify without my permission
- Basically anything without my permission, provided that your copy is ALSO licenced under the
  GPL v3.

Credits
-------

This program incorporates several things from elsewhere.

- Obviously, the Tacotron voice encoding guide, from which this entire script is based.
- `BSA_Browser <https://github.com/AlexxEG/BSA_Browser>`__, used for extracting voices from the
  Skyrim BSAs. Licenced under the GPLv3.
- The SoX audio manipulation library/program. Licenced under the GPLv3.
- The Windows builds of FFmpeg. Licenced under the GPLv3.

Requirements
------------

This program is for users familiar with Python and the command line. If you are not, please refrain
from using this program, or get someone who is to help you, or use a pre-generated model by somebody
who has used this program.

Otherwise, this script requires:

- A copy of Skyrim Special Edition for the data files themselves
- A copy of the Skyrim SE Creation Kit for exporting dialogue
- An installed copy of the legacy DirectX SDK, or another copy of xWMAEncode.exe.
- Python 3.8 or higher (may work with 3.6 or 3.7, but is untested)
- The ``poetry`` software installation tool.

This script, however, does not require and includes binary versions of:

- SoX, used as specified in the guide for tweaking the audio files.
- FFmpreg, used as specified in the guide for tweaking the audio files.

If you don't trust me and wish to use your own binaries, this script will automatically use
any versions that are in the ``PATH``.

Usage
-----

For the sake of brevity, all Python commands should be ran under ``poetry``, e.g.
``poetry run python reprocess.py ...``

1. Open the Skyrim SE Creation Kit. Go to "File -> Data". Double click the plugin files that
   contain voiced dialogue you wish to use (e.g. the five main game masters).

2. Wait for it to load. Ignore the scary windows and find the main window. Click
   "Character -> Export Dialogue". Click OK. Ignore any warnings and close the Creation Kit.

3. Run ``python reprocess.py dialogue-export.py``. This will reprocess the ``dialogueExport.txt``
   file generated by the Creation Kit for later usage.

4. (Optional) Run ``python reprocess.py list-voices`` to list the available voices that can be
   processed.

5. Run ``python reprocess.py extract-voices`` to extract the Skyrim voice files from the BSA. This
   will take a few minutes. A new ``out/extracted`` directory will be created to store the FUZ
   files.

6. Run ``python reprocess.py extract-fuz`` to extract the XWM files from the FUZ containers. This
   will take a few minutes. A new ``out/xwm`` directory will be created to store the XWM files.

7. Run ``python reprocess.py generate-training-data <voice type>``, where ``<voice type>`` is the
   voice type that you want to train on. This will generate an ``out/training/<voice type>``
   directory, ready to be uploaded to Google Drive.

Repeat the command in step 7 for all the voices you want to train on.

Note that step 6 and 7 are the most time consuming tasks; whilst these are multithreaded you're
likely to hit I/O starvation beforehand. It takes several minutes for FUZ extracting and a lot of
time for each voice reprocessor.

Cleanup
-------

Once done, you can delete the ``out/extracted`` and the ``out/xwm`` directories.

.. _this tutorial: https://drive.google.com/file/d/1SsRAO3R_ZD-GnbFpBUzBTNJlNcPdCGoM/view